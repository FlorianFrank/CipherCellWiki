"use strict";(self.webpackChunkcipher_cell_wiki=self.webpackChunkcipher_cell_wiki||[]).push([[436],{7189:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"srs-ran_docker/required-repositories","title":"Prequesites","description":"This page describes all required steps and required packages before installing the test environment.","source":"@site/docs/srs-ran_docker/requirements.md","sourceDirName":"srs-ran_docker","slug":"/srs-ran_docker/required-repositories","permalink":"/CipherCellWiki/docs/srs-ran_docker/required-repositories","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/srs-ran_docker/requirements.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"required-repositories","title":"Prequesites","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/CipherCellWiki/docs/srs-ran_docker/overview"},"next":{"title":"Installation","permalink":"/CipherCellWiki/docs/srs-ran_docker/installation"}}');var i=s(4848),o=s(8453);const t={id:"required-repositories",title:"Prequesites",sidebar_position:2},l=void 0,c={},a=[{value:"Install necessary packages",id:"install-necessary-packages",level:2},{value:"Installing Docker on Ubuntu",id:"installing-docker-on-ubuntu",level:3},{value:"Required packages for compiling on Ubuntu without Docker",id:"required-packages-for-compiling-on-ubuntu-without-docker",level:3},{value:"Clone all projects:",id:"clone-all-projects",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This page describes all required steps and required packages before installing the test environment.\nWe tested our systems on Ubuntu and macOS Systems."}),"\n",(0,i.jsx)(n.p,{children:"More specifically the following versions are tested:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ubuntu 24.04"}),"\n",(0,i.jsx)(n.li,{children:"macOS Sequoia 15.5"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"install-necessary-packages",children:"Install necessary packages"}),"\n",(0,i.jsx)(n.p,{children:"Next, we list all the necessary packages required for either a dockerized or standalone execution."}),"\n",(0,i.jsx)(n.h3,{id:"installing-docker-on-ubuntu",children:"Installing Docker on Ubuntu"}),"\n",(0,i.jsxs)(n.p,{children:["To set up ",(0,i.jsx)(n.strong,{children:"Docker"})," and ",(0,i.jsx)(n.strong,{children:"Docker Compose"})," on Ubuntu, follow these steps:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Install Prerequisites"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update && sudo apt-get install -y \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Add Docker\u2019s Official GPG Key"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | \\\n    sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Set Up the Docker Repository"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo \\\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \\\n  https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"4. Install Docker Engine and Plugins"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update && sudo apt-get install -y \\\n    docker-ce \\\n    docker-ce-cli \\\n    containerd.io \\\n    docker-compose-plugin\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"5. Add Current User to Docker Group"})}),"\n",(0,i.jsx)(n.p,{children:"Reloggin is necessary!"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo usermod -aG docker $USER\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"6. Install Latest Docker Compose (Standalone Binary)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | \\\n    grep -Po \'"tag_name": "\\K[^\\"]+\')\n\nsudo curl -L \\\n    "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" \\\n    -o /usr/local/bin/docker-compose\n\nsudo chmod +x /usr/local/bin/docker-compose\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"7. Verify Installation"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker --version\ndocker-compose --version\n"})}),"\n",(0,i.jsx)(n.h3,{id:"required-packages-for-compiling-on-ubuntu-without-docker",children:"Required packages for compiling on Ubuntu without Docker"}),"\n",(0,i.jsxs)(n.p,{children:["Install the following packages to compile the ",(0,i.jsx)(n.em,{children:"srsRAN project"})," on Linux (tested on Ubuntu):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update\nsudo apt-get install -y \\\n    build-essential \\\n    cmake \\\n    libdw-dev \\\n    binutils-dev \\\n    libdwarf-dev \\\n    libelf-dev \\\n    pkg-config \\\n    libfftw3-dev \\\n    libyaml-cpp-dev \\\n    libmbedtls-dev \\\n    doxygen \\\n    libsctp-dev\n"})}),"\n",(0,i.jsx)(n.h2,{id:"clone-all-projects",children:"Clone all projects:"}),"\n",(0,i.jsx)(n.p,{children:"Execute the following commands in order to checkout all repositories manually."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir srs_ran_docker_demo\ncd srs_ran_docker_demo\n\ngit clone git@github.com:srsran/oran-sc-ric.git\ngit clone git@github.com:srsran/srsRAN_Project.git\ngit clone git@github.com:srsran/srsRAN_4G.git\ngit clone git@github.com:xfoukas/srsRAN_Project_jbpf.git\n"})}),"\n",(0,i.jsx)(n.p,{children:"or you can simply checkout our repository:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:CipherCell-DEV/srsRAN_test_environment.git\ngit submodule update --init --recurcive\n"})}),"\n",(0,i.jsx)(n.p,{children:"when using MAC OS the following packages are required, which can be installed for example using Homebrew"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"brew install mbedtls\nbrew install yaml-cpp\nbrew install libusrsctp\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"MAC OS Support is experimental and not fully tested!"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(6540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);
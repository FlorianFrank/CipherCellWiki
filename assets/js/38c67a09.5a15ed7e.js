"use strict";(self.webpackChunkcipher_cell_wiki=self.webpackChunkcipher_cell_wiki||[]).push([[436],{7189:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"srs-ran_docker/required-repositories","title":"Prequesites","description":"This page describes all required steps and required packages before installing the test environment.","source":"@site/docs/srs-ran_docker/requirements.md","sourceDirName":"srs-ran_docker","slug":"/srs-ran_docker/required-repositories","permalink":"/CipherCellWiki/docs/srs-ran_docker/required-repositories","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/srs-ran_docker/requirements.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"required-repositories","title":"Prequesites","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/CipherCellWiki/docs/srs-ran_docker/overview"},"next":{"title":"Installation","permalink":"/CipherCellWiki/docs/srs-ran_docker/installation"}}');var i=r(4848),t=r(8453);const o={id:"required-repositories",title:"Prequesites",sidebar_position:2},l=void 0,c={},a=[{value:"Clone all projects:",id:"clone-all-projects",level:2},{value:"Required dependencies when compiling locally (without Docker)",id:"required-dependencies-when-compiling-locally-without-docker",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This page describes all required steps and required packages before installing the test environment.\nWe tested our systems on Ubuntu and MACOS Systems. More specifically the following versions are tested:"}),"\n",(0,i.jsx)(n.h2,{id:"clone-all-projects",children:"Clone all projects:"}),"\n",(0,i.jsx)(n.p,{children:"Execute the following commands in order to checkout all repositories manually."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir srs_ran_docker_demo\ncd srs_ran_docker_demo\n\ngit clone git@github.com:srsran/oran-sc-ric.git\ngit clone git@github.com:srsran/srsRAN_Project.git\ngit clone git@github.com:srsran/srsRAN_4G.git\ngit clone git@github.com:xfoukas/srsRAN_Project_jbpf.git\n"})}),"\n",(0,i.jsx)(n.p,{children:"or you can simply checkout our repository:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:CipherCell-DEV/srsRAN_test_environment.git\ngit submodule update --init --recurcive\n"})}),"\n",(0,i.jsx)(n.h2,{id:"required-dependencies-when-compiling-locally-without-docker",children:"Required dependencies when compiling locally (without Docker)"}),"\n",(0,i.jsx)(n.p,{children:"Install the following packages to compile the srsRAN project on Linux (tested on Ubuntu):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update\nsudo apt-get install -y \\\n    build-essential \\\n    cmake \\\n    libdw-dev \\\n    binutils-dev \\\n    libdwarf-dev \\\n    libelf-dev \\\n    pkg-config \\\n    libfftw3-dev \\\n    libyaml-cpp-dev \\\n    libmbedtls-dev \\\n    doxygen \\\n    libsctp-dev\n"})}),"\n",(0,i.jsx)(n.p,{children:"when using MAC OS the following packages are required, which can be installed for example using Homebrew"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"brew install mbedtls\nbrew install yaml-cpp\nbrew install libusrsctp\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"MAC OS Support is experimental and not fully tested!"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);